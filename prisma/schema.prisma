// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../.prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Key {
  id         Int       @id @default(autoincrement())
  key        String
  keyHash String
  platformId Int
  authTag    String
  iv         String
  donation   Donation?
  Platform   Platform @relation(fields: [platformId], references: [id]) 

  @@unique([keyHash, platformId])
  @@map("keys")
}

model Region {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  donation Donation[]

  @@map("regions")
}

model Donation {
  id             Int           @id @default(autoincrement())
  keyId          Int           @unique
  key            Key          @relation(fields: [keyId], references: [id], onDelete: Cascade)
  discordId      String
  platformId     Int
  platform       Platform     @relation(fields: [platformId], references: [id])
  platformTypeId Int
  platformType   PlatformType? @relation(fields: [platformTypeId], references: [id])
  regionId       Int
  region         Region      @relation(fields: [regionId], references: [id])
  giveawayId Int? @unique
  giveaway Giveaway?
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt

  @@map("donations")
}

model Giveaway{
  id Int @id @default(autoincrement())
  statusId Int
  donationId Int @unique
  donation Donation @relation(fields: [donationId], references: [id])
  status Status @relation(fields: [statusId], references: [id])
  winnerDiscordId String?
  duration DateTime

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  @@map("giveaways")
}

model Status {
  id Int @id @default(autoincrement())
  name String @unique
  giveaway Giveaway[]

  @@map("statuses")
}

model Platform {
  id             Int           @id @default(autoincrement())
  name           String        @unique
  platformTypeId Int
  platformType   PlatformType? @relation(fields: [platformTypeId], references: [id])
  donation       Donation[]
  key            Key[]

  @@map("platforms")
}

model PlatformType {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  platform Platform[]
  donation Donation[]

  @@map("platform_types")
}
